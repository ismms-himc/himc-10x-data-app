Integrating a custom frontend:
1) add node_modules/, bundle.js, and bundle.js.map to .gitignore
2) npm init --yes to create a package.json file
3) create frontend folder with entry file
4) npm install --save
    - webpack
    - react
    - react-dom
    - react-router-dom
    - redux
    - react-redux
    - babel-core
    - babel-loader
    - babel-preset-react
    - babel-preset-es2015
    - material-ui
    - lodash
5) add webpack.config.js file
6) add app/api/static stylesheets and index.html
7) Add samples_api_util.js
8) Add samples_actions.js
9) Add reducers (sample and root)
10) create store.js
11) Add root component-- responsible for rendering all of the app's React components
12) Add SampleIndex component container


TODO: Get entry file's Welcome h1 to render


SETUP:
- to build a new bundle.js: npm run webpack
- running the dev server: npm start
    NOTE: not currently working. still have to run the following in order to
    detect changes: npm run webpack
