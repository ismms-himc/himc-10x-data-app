Notes for own educational purposes only. May be useful for creating apps using same stack in the future :)

Steps taken:
1.) Integrate with admin-on-rest:
cd app/api
sudo npm install -g create-react-app
create-react-app frontend
cd frontend
yarn add admin-on-rest
sudo npm install
sudo yarn start OR sudo npm start
Note to self: pack.json name: frontend. May need to change later on

2.) Begin filling out SampleFilter and SampleList constants. 

3.) In App.js, integrate admin on rest and jsonServerRestClient hack

4.) Begin filling out application.py based on himc-db and flask-jwt-auth

5.) Create and active a virtualenv and install the dependencies as per jwt-auth tutorial:
$ python3.6 -m venv env
$ source env/bin/activate
$ cd app
$ pip3 install -r requirements.txt

6.) Set up Postgres
sudo -u postgres -i
psql
# create database himc_10x_data_app;
CREATE DATABASE
# create database himc_10x_data_app_test;
CREATE DATABASE
# \q

7.) Fill out app/config.py based off jwt_auth project/server/config.py and set environment variables in terminal:

export APP_SETTINGS="app.config.DevelopmentConfig"

8.) Add tests for development and testing configs in tests/ instead of project/tests like jwt-auth

9.) Pass 3 environment tests
python3 manage.py test

10.) Define basic user model and install psycopg==2.6.2

11.) Apply migration adding users table to db
python3 manage.py create_db
python3 manage.py db init
python3 manage.py db migrate

12.) add encode_auth_token function to User model

13.) generate random secret key

14.) add user model test

15.) Add decode auth function and test


16.) Get the following working: 
		cd app/api
		python3 __init__.py

		Attempts:
		1) export FLASK_APP=__init__.py
		2) create setup.py file, move __init__.py from app/api to app/, export FLASK_APP=himc-10x-data-app, pip install -e ., flask run
			** this made it work, but not via flask run; running python3 __init__.py no longer results in an error

17.) Add auth test

18.) Add auth route

IN-PROGRESS: debug tests for user registration
<TestResponse streamed [404 NOT FOUND]>

DETOUR:

19.) Create Sample model and run migrations

20.) Add CSRF Protection

21.) Add homepage routes and blueprints

22.) Add sample routes and blueprints

NEXT:
Add /samples route and connect to front end
Figure out how to seed development DB with samples to test


DEBUGGING TOOLS:
import pdb; pdb.set_trace()